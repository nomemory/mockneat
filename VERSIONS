Version 0.4.5
-------------
- Fixed a bug affecting the size of a DictType

Version 0.4.4
-------------
- Migration to maven central

Version 0.4.3
-------------
- Removed logging - it was never implemented and it's not as useful as I was imagining
- Added more javadocs
- Fixed javadocs

Version 0.4.2
-------------
- Fixed https://github.com/nomemory/mockneat/issues/93 - issue with double loss precisions in case of probabilities

Version 0.4.1
-------------
- Fixed a bug where objectMap() wasn't accessible by calling a shorthand method

Version 0.4.0
-------------
- Added a mockunit - objectMap() - using this it's easy to create JSON objects without having to rely on an existing POJO

Version 0.3.9
-------------
- Added a new mockunit - constant()
- Fixed the random contract for markovneat

Version 0.3.8
-------------
- Added a new mockunit: creatures()
- Fixed typo for industries()
- Fixed a problem with variable size mockunits for collections

Version 0.3.7
-------------
- Bug fixing

Version 0.3.6
-------------
- New gradle wrapper version created - works better with travis-ci;
- Fixed a bug related to SQLEscapers. Replaced UnaryOperator<T> with Function<T,T> in the API;
- Deprecating MockUnitLocalDate.display(DateTimeFormatter dtf, ...) methods;

Version 0.3.6
-------------
- Fixed celebrities().rockStars() method;

Version 0.3.5
-------------
- Added new celebrities() MockUnit;
- Added new primes() MockUnit;
- Fixed 100+ minor code smells;
- Added feature to generate numbers in a closed range;
- Added feature to generate numbers with a lower bound;

Version 0.3.4
-------------
- Added new MockUnitStrings;

Version 0.3.3
-------------
- Changed the implementation of markovs() using a new library: markovneat ;

Version 0.3.2
-------------
- Added support for constant() in Filler() method.

Version 0.3.1
-------------
- Reduced the cycles for creating csv file.
- Added MockUnit<T>.mapToLocalDate(Function<T, LocalDate>) method.
- Fixed the floats() shortcut methods - now it's accessible;

Version 0.3.0
-------------
- Fixed From.from.. family of methods. Now they can be accessed as static methods (the way it was intended in the first place anyway);
- fmt().param() now support String constant as a named param, not only MockUnitString;
- words() now support words().type() and words().types();

Version 0.2.9
-------------
- Fixed types() methods so they can alternate when types are picked.

Version 0.2.8
-------------
- Added shortcut methods for the from() family of functions.

Version 0.2.7
-------------
- Introduced shortcut factory methods to create MockNeats

Version 0.2.6
-------------
- Introduced a new method alias for the val() method. The new method is called: get().


Version 0.2.5
-------------
- Improved unit test coverage.

Version 0.2.4
-------------
- Added functionality to generate custom credit card numbers;


Version 0.2.3
-------------
- Fixed code smells reported by findbugs addon

Version 0.2.2
--------------
- Added new functionality to generate SQL Inserts (sqlInserts() method);
- Enhanced the MockUnitLocalDate interface by adding new methods;


VERSION 0.2.0
-------------
- Fixed the csvs() method;

Version 0.1.9
-------------
- Fixed random errors in the naughtyStrings() method.
- Added a new MockUnitString: CSSVs used to generate CSV files
- Added a new method on MockUnitString valJoin() that joins intermediary results a number of times.


Version 0.1.8
-------------
- Fixed minor issue with running test (Floats);
- Fixed https://github.com/nomemory/mockneat/issues/23


Version 0.1.7
-------------
- Updated internal libraries versions;
---- aleph-formater     0.0.3 -> 0.1.0
---- slf4j-api          1.7.24 -> 1.7.25
---- commons-lang3      3.5 -> 3.7
---- commons-codec      1.10 -> 1.11
---- commons-validator  1.5.1 -> 1.6
- Some of the methods/classes from commons-lang3 where deprecated -> introduced a new dependecy on commons-text.


Version 0.1.6
-------------
- Changed the way the serialize() method works;
- Added a new example for mocking non-static inner classes;
- The setters() methods defined by the Filler object are called in order (just like for Reflect)

Version 0.1.5
-------------
- Added support for generating "Lorem Ipsum" text using markov chains;
